
function maxProfit(K, prices)
{
    let n = prices.length;
    if (n === 0 || K === 0)
        return 0;

   
    let dp = Array.from({ length : n + 1},
             () => Array.from({length : K + 1},
                    () => Array(2).fill(0)));

   
    for (let i = n - 1; i >= 0; i--) {
        for (let k = 1; k <= K; k++) {
        
            // Buy state
            dp[i][k][1] = Math.max(dp[i + 1][k][0] - 
                        prices[i], dp[i + 1][k][1]);

            // Sell state
            dp[i][k][0] = Math.max(prices[i] +
                dp[i + 1][k - 1][1], dp[i + 1][k][0]);
        }
    }

    return dp[0][K][1];
}

let K = 2;
let prices = [ 10, 22, 5, 75, 65, 80 ];
console.log(maxProfit(K, prices));

//Output
87
